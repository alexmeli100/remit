// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	service "github.com/alexmeli100/remit/users/pkg/service"
	endpoint "github.com/go-kit/kit/endpoint"
	"reflect"
	"strings"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	CreateEndpoint         endpoint.Endpoint
	GetUserByIDEndpoint    endpoint.Endpoint
	GetUserByEmailEndpoint endpoint.Endpoint
	UpdateEmailEndpoint    endpoint.Endpoint
	UpdatePasswordEndpoint endpoint.Endpoint
	UpdateStatusEndpoint   endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.UsersService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		CreateEndpoint:         MakeCreateEndpoint(s),
		GetUserByEmailEndpoint: MakeGetUserByEmailEndpoint(s),
		GetUserByIDEndpoint:    MakeGetUserByIDEndpoint(s),
		UpdateEmailEndpoint:    MakeUpdateEmailEndpoint(s),
		UpdatePasswordEndpoint: MakeUpdatePasswordEndpoint(s),
		UpdateStatusEndpoint:   MakeUpdateStatusEndpoint(s),
	}
	for _, m := range mdw["Create"] {
		eps.CreateEndpoint = m(eps.CreateEndpoint)
	}
	for _, m := range mdw["GetUserByID"] {
		eps.GetUserByIDEndpoint = m(eps.GetUserByIDEndpoint)
	}
	for _, m := range mdw["GetUserByEmail"] {
		eps.GetUserByEmailEndpoint = m(eps.GetUserByEmailEndpoint)
	}
	for _, m := range mdw["UpdateEmail"] {
		eps.UpdateEmailEndpoint = m(eps.UpdateEmailEndpoint)
	}
	for _, m := range mdw["UpdatePassword"] {
		eps.UpdatePasswordEndpoint = m(eps.UpdatePasswordEndpoint)
	}
	for _, m := range mdw["UpdateStatus"] {
		eps.UpdateStatusEndpoint = m(eps.UpdateStatusEndpoint)
	}
	return eps
}

func GetEndpointList() []string {
	v := reflect.ValueOf(Endpoints{})
	t := v.Type()
	l := make([]string, 0)

	for i := 0; i < t.NumField(); i++ {
		name := strings.TrimSuffix(t.Field(i).Name, "Endpoint")
		l = append(l, name)
	}

	return l
}
