syntax = "proto3";

package pb;

import "google/protobuf/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

//The Users service definition.
service Users {
 rpc Create         (CreateRequest        ) returns (CreateReply        );
 rpc GetUserByID    (GetUserByIDRequest   ) returns (GetUserByIDReply   );
 rpc GetUserByEmail (GetUserByEmailRequest) returns (GetUserByEmailReply);
 rpc GetUserByUUID  (GetUserByUUIDRequest ) returns (GetUserByUUIDReply );
 rpc UpdateEmail    (UpdateEmailRequest   ) returns (UpdateEmailReply   );
 rpc UpdateStatus   (UpdateStatusRequest  ) returns (UpdateStatusReply  );
}

message UserEvent {
 UserEventKind kind = 1;
 User user = 2;
}

enum UserEventKind {
 UserCreated = 0;
 UserPasswordReset = 1;
}

message User {
 // @inject_tag: db:"first_name"
 string firstName = 1;
 // @inject_tag: db:"last_name"
 string lastName  = 2;
 // @inject_tag: db:"email"
 string email     = 3;
 // @inject_tag: db:"uuid"
 string uuid      = 4;
 // @inject_tag: db:"id"
 int64  id        = 5;
 // @inject_tag: db:"country"
 string country   = 6;
 // @inject_tag: db:"created_at"
 google.protobuf.Timestamp createdAt = 8 [(gogoproto.stdtime) = true];
 // @inject_tag: db:"confirmed"
 bool confirmed = 7;
}

message CreateRequest {
 User user = 1;
}


message CreateReply {
 string err = 1;
}

message GetUserByIDRequest {
 int64 id = 1;
}

message GetUserByIDReply {
 User user = 1;
 string err = 2;
}

message GetUserByUUIDRequest {
 string UUID = 1;
}

message GetUserByUUIDReply {
 User user = 1;
 string err = 2;
}

message GetUserByEmailRequest {
 string email = 1;
}

message GetUserByEmailReply {
 User user = 1;
 string err = 2;
}

message UpdateEmailRequest {
 User user = 1;
}

message UpdateEmailReply {
 string err = 1;
}

message UpdatePasswordRequest {
 User user = 1;
}

message UpdatePasswordReply {
 string err = 1;
}

message UpdateStatusRequest {
 User user = 1;
}

message UpdateStatusReply {
 string err = 1;
}

