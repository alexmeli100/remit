syntax = "proto3";

package pb;

import "google/protobuf/timestamp.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

//The Payment service definition.
service Payment {
 rpc SaveCard               (SaveCardRequest              ) returns (SaveCardReply              );
 rpc GetPaymentIntentSecret (GetPaymentIntentSecretRequest) returns (GetPaymentIntentSecretReply);
 rpc CapturePayment         (CapturePaymentRequest)         returns (CapturePaymentReply);
 rpc GetCustomerID          (GetCustomerIDRequest)          returns (GetCustomerIDReply);
 rpc CreateTransaction      (CreateTransactionRequest)      returns (CreateTransactionReply);
}

message Transaction {
 // @inject_tag: db:"id"
 int64  id = 1;
 // @inject_tag: db:"recipient_id"
 int64  recipientId = 2;
 // @inject_tag: db:"user_id"
 string userId = 3;
 // @inject_tag: db:"created_at"
 google.protobuf.Timestamp createdAt = 4 [(gogoproto.stdtime) = true];
 // @inject_tag: db:"amount_received"
 double amountReceived = 5;
 // @inject_tag: db:"amount_sent"
 double amountSent = 6;
 // @inject_tag: db:"transaction_fee"
 double transactionFee = 7;
 // @inject_tag: db:"transaction_type"
 string transactionType = 8;
 // @inject_tag: db:"send_currency"
 string sendCurrency = 9;
 // @inject_tag: db:"receive_currency"
 string receiveCurrency = 10;
 // @inject_tag: db:"exchange_rate"
 double exchangeRate = 11;
 // @inject_tag: db:"payment_intent"
 string paymentIntent = 12;
}



message PaymentRequest {
 string uid = 1;
 double amount = 2;
 string currency = 3;
 string cardID = 4;
 bool   capture = 5;
}

message SaveCardRequest {
 string uid = 1;
}

message SaveCardReply {
 string secret = 1;
 string err = 2;
}

message GetPaymentIntentSecretRequest {
 PaymentRequest req = 1;
}

message GetPaymentIntentSecretReply {
 string secret = 1;
 string err = 2;
}

message CapturePaymentRequest {
 string pi = 1;
 double amount = 2;
}

message CapturePaymentReply {
 string secret = 1;
 string err = 2;
}

message GetCustomerIDRequest {
 string uid = 1;
}

message GetCustomerIDReply {
 string customerID = 1;
 string err = 2;

}

message CreateTransactionRequest {
 Transaction transaction = 1;
}

message CreateTransactionReply {
 Transaction transaction = 1;
 string err = 2;
}